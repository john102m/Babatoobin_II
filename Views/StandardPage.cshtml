@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.StandardPage>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

@{
    Layout = "Layout.cshtml";

    string? Id = HttpContextAccessor.HttpContext?.Request.Query["productId"];
    ProductBlock? product = (ProductBlock?)Umbraco.Content(Id!);
}

<main id="main">
    <!-- ======= Breadcrumbs ======= -->
    <section id="breadcrumbs" class="breadcrumbs">
        <div class="container">

            <div class="d-flex justify-content-between align-items-center">
                <h2>@product?.Value("headline", fallback: Fallback.ToDefaultValue, defaultValue: @product.Name)</h2>
                <ol>
                    <li><a href="\">Home</a></li>
                    <li><a href="@Model.Root().Url()#portfolio">Projects</a></li>
                    <li>@product?.Name</li>
                </ol>
            </div>

        </div>
    </section><!-- End Breadcrumbs -->
    <!-- ======= Portfolio Details Section ======= -->
    <section id="portfolio-details" class="portfolio-details">
        <div class="container">
            <div class="row gy-4">
                <div class="col-lg-8">
                    <div class="portfolio-details-slider swiper">
                        <div class="swiper-wrapper align-items-center">
                            @{
                                foreach (var image in product?.ImageCarousel!)
                                {
                                    <div class="swiper-slide">
                                        <img src="@image.GetCropUrl()" alt="">
                                    </div>

                                }
                            }
                        </div>
                        <div class="swiper-pagination"></div>
                    </div>
                </div>

                <div class="col-lg-4">
                    <div class="portfolio-info">
                        <h3>@product?.Value("projectTitle", fallback: Fallback.ToDefaultValue, defaultValue: @product.Name)</h3>
                        @product.DetailSummary
                    </div>
                    <div class="portfolio-description">
                        <h2>@product.DetailHeading</h2>
                        <p>
                            @product.DetailDescription
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </section><!-- End Portfolio Details Section -->
</main><!-- End #main -->
